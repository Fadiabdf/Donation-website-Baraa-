# Generated by Django 4.2 on 2023-05-08 20:23

import ckeditor.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom', models.CharField(blank=True, max_length=50, null=True, verbose_name='Nom')),
                ('Prenom', models.CharField(blank=True, max_length=50, null=True, verbose_name='Prénom')),
                ('Age', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(120)], verbose_name='Age')),
                ('Date_Naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('Adresse', models.CharField(blank=True, max_length=150, null=True, verbose_name='Adresse')),
                ('Num_tel', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Numéro du téléphone')),
                ('Sexe', models.CharField(blank=True, choices=[('masculin', 'M'), ('féminin', 'F')], default='M', max_length=20, verbose_name='Sexe')),
                ('Pays', django_countries.fields.CountryField(max_length=2, verbose_name='Pays')),
            ],
            options={
                'verbose_name': 'Acteurs',
                'ordering': ['-Age'],
            },
        ),
        migrations.CreateModel(
            name='Don',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_donation', models.DateTimeField(auto_now_add=True, null=True)),
                ('type_don', models.CharField(blank=True, choices=[('money', 'give money'), ('item', 'give item')], max_length=20, null=True, verbose_name='type de don')),
            ],
            options={
                'verbose_name': 'dons',
            },
        ),
        migrations.CreateModel(
            name='img',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_img')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Qte', models.PositiveIntegerField(null=True, verbose_name='Quantité')),
                ('item', models.CharField(max_length=200, verbose_name='item')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender_name', models.CharField(max_length=100)),
                ('sender_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('date_envoie', models.DateTimeField(auto_now_add=True)),
                ('Contenu_msg', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Message de contact',
                'ordering': ['date_envoie'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(blank=True, max_length=100, null=True)),
                ('video_file', models.FileField(blank=True, null=True, upload_to='event_vd')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Beneficiaire',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.actor')),
                ('sit_sociale', models.CharField(blank=True, choices=[('victime_catastrophe_nat', 'VICTIME_CATASTROPHE_NATURELLE'), ('hospitalisé', 'HOSPITALISE'), ('malade', 'MALADE'), ('sans_abri', 'SANS_ABRI'), ('pauvre', 'PAUVRE'), ('handicapé', 'HANDICAPE'), ('cancéreux', 'CANCEREUX'), ('orphelin', 'ORPHELIN'), ('autiste', 'AUTISTE'), ('sans_etude', 'SANS_ETUDE'), ('eleve', 'ELEVE'), ('veuve', 'VEUVE'), ('besoin_particulier', 'BESOIN_PARTICULIER')], max_length=100, null=True)),
                ('date_ben', models.DateTimeField(auto_now_add=True, verbose_name='Date de bénéfice')),
                ('nb_ben', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='nombre de bénéfices')),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='contact')),
            ],
            options={
                'verbose_name': 'Beneficiaires',
                'ordering': ['date_ben'],
            },
            bases=('webapp.actor',),
        ),
        migrations.CreateModel(
            name='Benevole',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.actor')),
                ('Date_inscript', models.DateTimeField(auto_now_add=True)),
                ('bénévolat', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='contact')),
            ],
            options={
                'verbose_name': 'bénévoles',
                'ordering': ['-Date_inscript'],
            },
            bases=('webapp.actor',),
        ),
        migrations.CreateModel(
            name='Don_argent',
            fields=[
                ('don_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.don')),
                ('mode_paiement', models.CharField(choices=[('catre eldahabia', 'CARTE_DAHABIA'), ('CIB', 'CIB')], max_length=50)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant du don (DZD)')),
            ],
            options={
                'verbose_name': 'dons type argent',
            },
            bases=('webapp.don',),
        ),
        migrations.CreateModel(
            name='Don_choses',
            fields=[
                ('don_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.don')),
                ('Qte', models.PositiveIntegerField(verbose_name='Quantité')),
                ('item', models.CharField(max_length=200, verbose_name='item')),
                ('descript', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'dons type choses',
            },
            bases=('webapp.don',),
        ),
        migrations.CreateModel(
            name='Donateur',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.actor')),
                ('ccp_compte_num', models.CharField(max_length=16, null=True, validators=[django.core.validators.RegexValidator(message='Le numéro de compte CCP doit contenir 16 chiffres', regex='^\\d{16}$')])),
                ('numero_carte', models.CharField(blank=True, max_length=16, null=True, validators=[django.core.validators.RegexValidator(message='Le numéro de carte doit contenir 16 chiffres', regex='^\\d{16}$')])),
                ('exp_date', models.DateField(blank=True, null=True)),
                ('cvv', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(999)])),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
            ],
            options={
                'verbose_name': 'donateurs',
            },
            bases=('webapp.actor',),
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('actor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.actor')),
                ('date_iscript', models.DateField(verbose_name='inscription date')),
                ('photo_profil', models.ImageField(blank=True, null=True, upload_to='members_imgs/')),
                ('role', models.CharField(choices=[('gérant', 'Gerant'), ('comptable', 'Comptable'), ('transporteur', 'Transporteur'), ('admin', 'Admin'), ('respensable evenement', 'Respensable Event'), ('organisateur', 'Organisateur'), ('annonceur', 'Annanceur'), ('membre', 'Member')], default='membre', max_length=50)),
                ('actif', models.BooleanField(choices=[(False, 'inactif'), (True, 'actif')], default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='le compte')),
            ],
            options={
                'verbose_name': 'membres',
                'ordering': ['-date_iscript'],
            },
            bases=('webapp.actor',),
        ),
        migrations.CreateModel(
            name='Partenaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Nom_org', models.CharField(max_length=50)),
                ('Descript_org', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('Date_collab', models.DateTimeField(auto_now_add=True)),
                ('logo', models.ImageField(null=True, upload_to='partenaires_imgs/')),
                ('email', models.EmailField(default=None, max_length=254)),
                ('respo_partner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.actor', verbose_name='le partenaire')),
            ],
            options={
                'ordering': ['Date_collab'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(default='Titre_évènement', max_length=100)),
                ('date_début', models.DateTimeField(null=True, verbose_name='Date et heure début évènement')),
                ('date_fin', models.DateTimeField(blank=True, null=True, verbose_name='Date et heure fin évènement')),
                ('lieu', models.CharField(blank=True, max_length=200, null=True)),
                ('descript', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('list_besoin', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='liste des besoins')),
                ('somm_collect', models.DecimalField(blank=True, decimal_places=4, default=0.0, max_digits=10, null=True)),
                ('donation_goal', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True, verbose_name='Montant souhaité des dons (DZD)')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('images', models.ManyToManyField(blank=True, to='webapp.img', verbose_name='photos  evenement')),
                ('partenaires', models.ManyToManyField(blank=True, default=None, to='webapp.partenaire')),
                ('videos', models.ManyToManyField(blank=True, to='webapp.video', verbose_name='videos  evenement')),
                ('benef_list', models.ManyToManyField(blank=True, to='webapp.beneficiaire')),
                ('benevole_list', models.ManyToManyField(blank=True, related_name='participants', to='webapp.benevole')),
                ('chef_equipe', models.ForeignKey(limit_choices_to={'role': 'respensable evenement'}, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.member', verbose_name='chef  evenement')),
                ('equipe', models.ManyToManyField(blank=True, related_name='event_equipe', to='webapp.member')),
            ],
            options={
                'verbose_name': 'Mes evenements',
                'ordering': ['-date_début'],
            },
        ),
        migrations.AddField(
            model_name='don',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.event'),
        ),
        migrations.CreateModel(
            name='Dmd_inscript',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('type', models.CharField(choices=[('B', 'Bénévole'), ('M', 'Membre'), ('P', 'Partenaire')], max_length=20)),
                ('date_dmd', models.DateTimeField(auto_now_add=True)),
                ('motivation', models.TextField(blank=True, null=True)),
                ('statut_dmd', models.BooleanField(choices=[(False, 'pas traitée'), (True, 'traitée')], default=False)),
                ('Nom_org', models.CharField(max_length=100, null=True)),
                ('demandeur', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.actor')),
            ],
            options={
                'verbose_name': 'demandes inscription',
                'ordering': ['-date_dmd'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('is_checked', models.BooleanField(default=False)),
                ('type', models.CharField(blank=True, choices=[('role_updated', 'Role Updated'), ('announcement', 'Announcement'), ('new_message', 'New Message'), ('request_accepted', 'Acceptance')], max_length=50, null=True, verbose_name='notification for :')),
                ('recepteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='recepteur', to='webapp.member', verbose_name='notif to')),
            ],
            options={
                'ordering': ['-date_envoi'],
            },
        ),
        migrations.CreateModel(
            name='Msg_aide',
            fields=[
                ('message_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='webapp.message')),
                ('sit_sociale', models.CharField(blank=True, choices=[('victime_catastrophe_nat', 'VICTIME_CATASTROPHE_NATURELLE'), ('hospitalisé', 'HOSPITALISE'), ('malade', 'MALADE'), ('sans_abri', 'SANS_ABRI'), ('pauvre', 'PAUVRE'), ('handicapé', 'HANDICAPE'), ('cancéreux', 'CANCEREUX'), ('orphelin', 'ORPHELIN'), ('autiste', 'AUTISTE'), ('sans_etude', 'SANS_ETUDE'), ('eleve', 'ELEVE'), ('veuve', 'VEUVE'), ('besoin_particulier', 'BESOIN_PARTICULIER')], max_length=100, null=True)),
                ('relation', models.CharField(choices=[('moi_meme', 'Moi même'), ('ami', 'Ami'), ('college', 'Collége'), ('fils', 'Fils'), ('voisin', 'Voisin'), ('autre', 'Autre')], max_length=20, verbose_name="la relation du bénéficiaire concerné avec l'emmeteur")),
                ('descript_besoin', ckeditor.fields.RichTextField(null=True, verbose_name='les besoins du benéficiaire')),
                ('Statut_msg', models.BooleanField(choices=[(False, 'pas vue'), (True, ' vue')], default=False, max_length=10, verbose_name='Status message')),
                ('benefic_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='msg_aide', to='webapp.actor', verbose_name='Bénéficiaire')),
            ],
            options={
                'verbose_name': 'Message  aide',
            },
            bases=('webapp.message',),
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='webapp.donateur')),
                ('dons_argent', models.ManyToManyField(blank=True, to='webapp.don_argent')),
                ('dons_choses', models.ManyToManyField(blank=True, to='webapp.don_choses')),
            ],
            options={
                'verbose_name': 'donations',
            },
        ),
        migrations.AddField(
            model_name='don',
            name='donateur',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='webapp.donateur'),
        ),
    ]
